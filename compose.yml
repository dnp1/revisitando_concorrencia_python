version: "2"
services:
  reverse-proxy:
    image: nginx:1.21.3-alpine
    ports:
      - 8080:80
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    links:
      - python:python
  python:
    build: .
    container_name: python
    environment:
      PWPWORKERS: ${PWPWORKERS:-1}
      PGHOST: postgres
      PGDATABASE: postgres
      PGUSER: postgres
      PGPASSWORD: mypass
      PGPORT: 5432
      POOL_SIZE: ${POOL_SIZE:-10}
      TEST_TYPE: ${TEST_TYPE:-no_sleep}
      THREADS_COUNT: ${THREADS_COUNT:-1}
    command: [ "bash" , "${COMMAND:-serve-aiohttp.sh}" ]
    mem_limit: 512M
    mem_reservation: 256M
    cpu_quota: ${CPU_QUOTA:-100000}
    ports:
      - 8001:8001
    expose:
      - 8001
    links:
      - postgres:postgres
  pgbouncer:
    image: edoburu/pgbouncer
    restart: always
    environment:
      DB_HOST: postgres
      DB_DATABASE: postgres
      DB_USER: postgres
      DB_PASSWORD: mypass
      DB_PORT: 5432
      MAX_CLIENT_CONN: 100
      DEFAULT_POOL_SIZE: 100
      MAX_DB_CONNECTIONS: 100
    expose:
      - 5432
    links:
      - postgres:postgres
  postgres:
    image: postgres:13-alpine
    restart: always
    environment:
      POSTGRES_PASSWORD: mypass
    expose:
      - 5432
    ports:
    - 5432:5432
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - 9090:9090
    command:
      - --config.file=/etc/prometheus/prometheus.yml
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
    depends_on:
      - cadvisor
  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: cadvisor
    ports:
      - 8081:8080
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
